\-runActions()
| 
| \-runSingleAction()
|   \-runCurrentAction(action, logValue, myCsvFileObj, logDataBool)
|     \-runOneAction(paramsObj)
|       \-doActionAsync(doActionAsyncParamsObj)
|   
| \-runFirstHalf()
|   \-runCurrentAction(action, logValue, myCsvFileObj, logDataBool)
|     \-runOneAction(paramsObj)
|       \-doActionAsync(doActionAsyncParamsObj)
|
\-runSpreadsheetDone()
| \-runSecondHalf(initCsvFileString)
|   \-runCurrentAction(action, logValue, myCsvFileObj, logDataBool)
|     \-runOneAction(paramsObj)
|       \-doActionAsync(doActionAsyncParamsObj)


showHideUI()
showHideUtil(element, value)
showLoadFile()
hideLoadFile()
showStaticFile()
hideStaticFile()
// showLinks()
// hideLinks()
showSpreadsheet()
// hideSpreadsheet()
showLoading()
hideLoading()
apiKeyMakeYellow()
apiKeyRemoveYellow()
checkApiKeyYellow()
fillApiKey()
getJustNames(inputArray, sort)
// getCsvFilename()
makeWeeklySpreadsheet(projectList, periodList, categoryList)
makeDailySpreadsheet(projectList, periodList, categoryList)
makeSpreadsheet(spreadsheetData, myCols, myColHeaders, myColWidths, projectList, periodList, categoryList)
getCustomDropDown(list)
// trimArray(initCsvFile, numOfColumns)
arrayToCsv(initCsvFile)
logFakeAction(logValue, logMiddle)
getActionOptions(action)
checkGetFile(action, hasFile, myCsvFileObj)
parseCSVFile(myCsvFileObj)
getPapaPromise(content)
readFileReaderAsync(file)
getSelectedRadioButtonValue(radioGroupName)
conversionErrorsPresent(resultArray)
logWebResults(resultList)
logConversionErrors(resultArray)
logData(action, currentStep)
writeSeparatorToLog()
checkPreReq(preReqType, user, apiKey, weekBegin, dateEndPeriod, numberOfWeeks, csvType, selectedFile)
writeToLog(logValue, logFirstColumn, type)
